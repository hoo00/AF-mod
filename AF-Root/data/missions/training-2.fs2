#Mission Info

$Version: 0.10
$Name:  XSTR("Training 2", 2187)
$Author: Brad Johnson
$Created: 07/30/99 at 10:40:15
$Modified: 11/22/10 at 14:57:00
$Notes:
This is a FRED created mission
$End Notes:

$Mission Desc:
 XSTR("Standard Training module TSM-103b", 2188)
$end_multi_text

+Game Type Flags: 4
+Flags: 0
+Red Alert: 0
+Scramble: 0
+Disallow Support: 0
+Hull Repair Ceiling: 0.000000
+Subsystem Repair Ceiling: 100.000000

+Player Entry Delay:
1.000000

+Viewer pos: 6.903011, 131.166977, 13.605335
+Viewer orient:
	1.000000, -0.000000, 0.000697,
	-0.000696, -0.060263, 0.998182,
	0.000042, -0.998183, -0.060263

+SquadReassignName: 53rd Hammerheads
+SquadReassignLogo: hammer1.pcx

$Skybox Model: Starfield.pof
$AI Profile: FS2 RETAIL

#Plot Info

$Tour:  XSTR("Blah", 6)
$Pre-Briefing Cutscene: Blah
$Pre-Mission Cutscene: Blah
$Next Mission Success: Blah
$Next Mission Partial: Blah
$Next Mission Failure: Blah

#Command Briefing

#Briefing
$start_briefing
$num_stages: 2
$start_stage
$multi_text
 XSTR("Welcome to training simulator module TSM-103b, Class B qualification for the Myrmidon space superiority fighter. This module has been designed to acquaint pilots with advanced targeting controls, weapons systems, and rearming procedures.", 2189)
$end_multi_text
$voice: TR2_MB_01.wav
$camera_pos: 6.903011, 131.166977, 13.605335
$camera_orient:
	1.000000, 0.000000, 0.000697,
	-0.000696, -0.060263, 0.998182,
	0.000042, -0.998183, -0.060263
$camera_time: 500
$num_lines: 0
$num_icons: 2
$Flags: 0
$Formula: ( true ) 
$start_icon
$type: 22
$team: Friendly
$class: GTF Myrmidon
$pos: 0.000000, 0.000000, 0.000000
$label: Alpha 1
+id: 1
$hlight: 0
$mirror: 0
$multi_text
$end_multi_text
$end_icon
$start_icon
$type: 0
$team: Friendly
$class: GTF Hercules Mark II
$pos: -1.778702, -32.323868, 30.424801
$label: Instructor
+id: 2
$hlight: 0
$mirror: 0
$multi_text
$end_multi_text
$end_icon
$end_stage
$start_stage
$multi_text
 XSTR("TSM units are approved for use as part of the GTVA combat training program or as a review for qualified pilots. The TSM series is not intended as a substitute for actual field training.", 2190)
$end_multi_text
$voice: TR2_MB_02.wav
$camera_pos: 0.000000, 136.366394, -207.871414
$camera_orient:
	1.000000, 0.000000, 0.000000,
	0.000000, 0.866025, 0.500000,
	0.000000, -0.500000, 0.866025
$camera_time: 500
$num_lines: 0
$num_icons: 2
$Flags: 0
$Formula: ( true ) 
$start_icon
$type: 22
$team: Friendly
$class: GTF Myrmidon
$pos: 0.000000, 0.000000, 0.000000
$label: Alpha 1
+id: 1
$hlight: 0
$mirror: 0
$multi_text
$end_multi_text
$end_icon
$start_icon
$type: 0
$team: Friendly
$class: GTF Hercules Mark II
$pos: -49.201702, -32.323887, 143.595078
$label: Instructor
+id: 2
$hlight: 0
$mirror: 0
$multi_text
$end_multi_text
$end_icon
$end_stage
$end_briefing

#Debriefing_info

$Num stages: 2

$Formula: ( is-event-true-delay 
   "Covered A Lot" 
   0 
)
$Multi text
    XSTR("Well done, pilot. You have successfully completed TSM-103b, Class B qualification for the Myrmidon space superiority fighter. You may now proceed to training simulator module TSM-103a.", 2191)
$end_multi_text
$Voice: TR2_DB_01.wav
$Recommendation text:
    XSTR("", 10)
$end_multi_text

$Formula: ( not 
   ( is-event-true-delay 
      "Covered A Lot" 
      0 
   )
)
$Multi text
    XSTR("Your performance was below acceptable standards for TSM-103b, Class B qualification for the Myrmidon space superiority fighter. You will not be authorized to advance to the next training simulator module until you have completed this unit successfully.", 2192)
$end_multi_text
$Voice: TR2_DB_02.wav
$Recommendation text:
    XSTR("", 10)
$end_multi_text

#Players		;! 1 total

$Starting Shipname: Alpha 1
$Ship Choices: (
)

+Weaponry Pool: (
	"Subach HL-7"	18
	"Rockeye"	110
	"Tempest"	260
)

#Objects		;! 8 total

$Name: Alpha 1		;! Object #0
$Class: GTF Myrmidon
$Team: Friendly
$Location: 0.000000, 0.000000, 0.000000
$Orientation:
	1.000000, 0.000000, 0.000000,
	0.000000, 1.000000, 0.000000,
	0.000000, 0.000000, 1.000000
$IFF: IFF 1
$AI Behavior: None
$Cargo 1:  XSTR("Nothing", 13)
+Initial Hull: 100
+Subsystem: Pilot
+Primary Banks: ( "Subach HL-7" "Subach HL-7" )
+Secondary Banks: ( "Rockeye" "Rockeye" "Tempest" )
$Arrival Location: Hyperspace
$Arrival Cue: ( false ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "player-start" )
+Flags2: ( )
+Respawn priority: 0
+Group: 0
+Score: 0

$Name: Instructor		;! Object #1
$Class: GTF Hercules Mark II
$Team: Friendly
$Location: -48.273640, -32.323872, 138.411240
$Orientation:
	0.877583, 0.000000, -0.479426,
	0.000000, 1.000000, 0.000000,
	0.479426, 0.000000, 0.877583
$IFF: IFF 1
$AI Behavior: None
$AI Goals: ( goals ( ai-play-dead 50 ) )
$Cargo 1:  XSTR("Nothing", 13)
+Initial Hull: 100
+Subsystem: Pilot
$Arrival Location: Hyperspace
$Arrival Cue: ( true ) 
$Departure Location: Hyperspace
$Departure Cue: ( or 
   ( is-event-true-delay 
      "Training Canceled" 
      8 
   )
   ( is-event-true-delay 
      "Covered A Lot" 
      12 
   )
)
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" "no-arrival-warp" "invulnerable" )
+Flags2: ( )
+Respawn priority: 0
+Orders Accepted: 0		;! note that this is a bitfield!!!
+Group: 0
+Score: 0
+Persona Index: 0

$Name: Drone 01		;! Object #2
$Class: GTDR Amazon
$Team: Hostile
$Location: -23.480898, 0.000063, 389.485809
$Orientation:
	-0.999831, 0.000000, -0.018406,
	0.000000, 1.000000, 0.000000,
	0.018406, 0.000000, -0.999831
$IFF: IFF 1
$AI Behavior: None
$AI Goals: ( goals ( ai-play-dead 89 ) )
$Cargo 1:  XSTR("Nothing", 13)
+Initial Hull: 100
+Subsystem: Pilot
+Primary Banks: ( "" )
$Arrival Location: Hyperspace
$Arrival Cue: ( is-event-true-delay "Two Drones" 0 ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" )
+Flags2: ( )
+Respawn priority: 0
+Group: 0
+Score: 0

$Name: Drone 02		;! Object #3
$Class: GTDR Amazon
$Team: Hostile
$Location: 53.466228, 55.377766, 455.508636
$Orientation:
	-0.998104, 0.000000, 0.061554,
	0.000000, 1.000000, 0.000000,
	-0.061554, 0.000000, -0.998104
$IFF: IFF 1
$AI Behavior: None
$AI Goals: ( goals ( ai-play-dead 89 ) )
$Cargo 1:  XSTR("Nothing", 13)
+Initial Hull: 100
+Subsystem: Pilot
+Primary Banks: ( "" )
$Arrival Location: Hyperspace
$Arrival Cue: ( is-event-true-delay "Two Drones" 1 ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" )
+Flags2: ( )
+Respawn priority: 0
+Group: 0
+Score: 0

$Name: Triton		;! Object #4
$Class: GTFR Triton
$Team: Friendly
$Location: -1239.148804, 148.363831, 1027.755005
$Orientation:
	0.050774, 0.000000, -0.998710,
	0.000000, 1.000000, 0.000000,
	0.998710, 0.000000, 0.050774
$IFF: IFF 1
$AI Behavior: None
$Cargo 1:  XSTR("Nothing", 13)
+Initial Velocity: 33
+Initial Hull: 100
+Subsystem: Pilot
+Subsystem: turret01
+Subsystem: turret02
$Arrival Location: Hyperspace
$Arrival Cue: ( is-event-true-delay 
   "Targeting Control" 
   5 
)
$Departure Location: Hyperspace
$Departure Cue: ( is-event-true-delay "Well done" 8 ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" "escort" )
+Flags2: ( )
+Respawn priority: 0
+Escort priority: 99
+Orders Accepted: 257		;! note that this is a bitfield!!!
+Group: 0
+Score: 0

$Name: Drone 03		;! Object #5
$Class: GTDR Amazon
$Team: Hostile
$Location: -299.494232, -0.000016, 400.303040
$Orientation:
	1.000000, 0.000000, 0.000000,
	0.000000, 1.000000, 0.000000,
	0.000000, 0.000000, 1.000000
$IFF: IFF 1
$AI Behavior: None
$Cargo 1:  XSTR("Nothing", 13)
+Initial Velocity: 33
+Initial Hull: 100
+Subsystem: Pilot
+Primary Banks: ( "" )
$Arrival Location: In front of ship
+Arrival Distance: 800
$Arrival Anchor: Alpha 1
$Arrival Cue: ( is-event-true-delay "More Drones" 2 ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" )
+Flags2: ( )
+Respawn priority: 0
+Group: 0
+Score: 0

$Name: Drone 04		;! Object #6
$Class: GTDR Amazon
$Team: Hostile
$Location: -194.352631, 0.000022, 306.580078
$Orientation:
	1.000000, 0.000000, 0.000000,
	0.000000, 1.000000, 0.000000,
	0.000000, 0.000000, 1.000000
$IFF: IFF 1
$AI Behavior: None
$Cargo 1:  XSTR("Nothing", 13)
+Initial Velocity: 33
+Initial Hull: 100
+Subsystem: Pilot
+Primary Banks: ( "" )
$Arrival Location: In front of ship
+Arrival Distance: 800
$Arrival Anchor: Alpha 1
$Arrival Cue: ( is-event-true-delay "More Drones" 2 ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" )
+Flags2: ( )
+Respawn priority: 0
+Group: 0
+Score: 0

$Name: Kos		;! Object #7
$Class: GTI Arcadia
$Team: Friendly
$Location: -3096.884277, -0.000273, -1495.501953
$Orientation:
	0.802096, 0.000000, -0.597196,
	0.000000, 1.000000, 0.000000,
	0.597196, 0.000000, 0.802096
$IFF: IFF 1
$AI Behavior: None
$Cargo 1:  XSTR("Nothing", 13)
+Initial Hull: 100
+Subsystem: Pilot
+Subsystem: turret01
+Subsystem: turret02
+Subsystem: turret03
+Subsystem: turret04
+Subsystem: turret05
+Subsystem: turret06
+Subsystem: turret07
+Subsystem: turret08
+Subsystem: turret09
+Subsystem: turret10
+Subsystem: turret11
+Subsystem: turret12
+Subsystem: turret13
+Subsystem: turret14
+Subsystem: turret15
+Subsystem: turret16
+Subsystem: turret17
+Subsystem: turret18
+Subsystem: turret19
+Subsystem: turret20
+Subsystem: turret21
+Subsystem: turret22
+Subsystem: turret23
+Subsystem: turret24
$Arrival Location: Hyperspace
$Arrival Cue: ( true ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Determination: 10
+Flags: ( "cargo-known" "protect-ship" )
+Flags2: ( )
+Respawn priority: 0
+Orders Accepted: 0		;! note that this is a bitfield!!!
+Group: 0
+Score: 0

#Wings		;! 1 total

$Name: Alpha
$Waves: 1
$Wave Threshold: 0
$Special Ship: 0		;! Alpha 1

$Arrival Location: Hyperspace
$Arrival Cue: ( true ) 
$Departure Location: Hyperspace
$Departure Cue: ( false ) 
$Ships: (		;! 1 total
	"Alpha 1"
)
+Hotkey: 0
+Flags: ( )

#Events		;! 63 total

$Formula: ( when 
   ( has-time-elapsed 2 ) 
   ( training-msg "Welcome" ) 
   ( protect-ship "Alpha 1" ) 
)
+Name: Welcome
+Repeat Count: 1
+Interval: 1

$Formula: ( when 
   ( true ) 
   ( training-msg "Target Me" ) 
   ( key-reset "T" ) 
)
+Name: Target Me
+Repeat Count: 1
+Interval: 1
+Chained: 12

$Formula: ( when 
   ( and 
      ( key-pressed "T" ) 
      ( targeted "Instructor" ) 
   )
   ( do-nothing ) 
)
+Name: Target Instructor
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Target Instructor", 2129)
+Objective key:  XSTR("Press $t$", 2193)

$Formula: ( when 
   ( true ) 
   ( training-msg "Combat" ) 
)
+Name: Combat
+Repeat Count: 1
+Interval: 1
+Chained: 2

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Two Drones" ) 
)
+Name: Two Drones
+Repeat Count: 1
+Interval: 1
+Chained: 17

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Nearest Hostile" ) 
   ( key-reset "H" ) 
)
+Name: Nearest Hostile
+Repeat Count: 1
+Interval: 1
+Chained: 6

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Target Drone 01" ) 
)
+Name: Target Drone 01
+Repeat Count: 1
+Interval: 1
+Chained: 11

$Formula: ( when 
   ( and 
      ( key-pressed "H" ) 
      ( targeted "Drone 01" ) 
   )
   ( do-nothing ) 
)
+Name: Nearest Hostile 2
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target Drone 01", 2144)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Target Drone 02" ) 
)
+Name: Target Drone 02
+Repeat Count: 1
+Interval: 1
+Chained: 3

$Formula: ( when 
   ( and 
      ( key-pressed "H" ) 
      ( targeted "Drone 02" ) 
   )
   ( do-nothing ) 
)
+Name: Target Drone 02 2
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target Drone 02", 2195)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Excellent" ) 
)
+Name: Excellent
+Repeat Count: 1
+Interval: 1
+Chained: 2

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Targeting Control" ) 
)
+Name: Targeting Control
+Repeat Count: 1
+Interval: 1
+Chained: 2

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Observe" ) 
)
+Name: Observe
+Repeat Count: 1
+Interval: 1
+Chained: 16

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( flash-hud-gauge "ESCORT_VIEW" ) 
)
+Name: Flash Monitor
+Repeat Count: 1
+Interval: 1
+Chained: 3

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Escort Target" ) 
)
+Name: Escort Target
+Repeat Count: 1
+Interval: 1
+Chained: 10

$Formula: ( when 
   ( and 
      ( key-pressed "E" ) 
      ( targeted "Triton" ) 
   )
   ( do-nothing ) 
)
+Name: Target The Triton
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target The Triton", 2196)
+Objective key:  XSTR("Press $e$", 2197)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Escort Mission" ) 
)
+Name: Escort Mission
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Escort List" ) 
)
+Name: Escort List
+Repeat Count: 1
+Interval: 1
+Chained: 13

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Review" ) 
)
+Name: Review
+Repeat Count: 1
+Interval: 1
+Chained: 15

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Target 01 Again" ) 
   ( key-reset "H" ) 
)
+Name: Target 01 Again
+Repeat Count: 1
+Interval: 1
+Chained: 6

$Formula: ( when 
   ( and 
      ( key-pressed "H" ) 
      ( targeted "Drone 01" ) 
   )
   ( do-nothing ) 
)
+Name: Target 01 Again 2
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target Drone 01", 2144)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Target 02 Again" ) 
   ( key-reset "H" ) 
)
+Name: Target 02 Again
+Repeat Count: 1
+Interval: 1
+Chained: 2

$Formula: ( when 
   ( and 
      ( key-pressed "H" ) 
      ( targeted "Drone 02" ) 
   )
   ( do-nothing ) 
)
+Name: Target 02 Again 2
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Target Drone 02", 2195)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Target Triton Again" ) 
   ( key-reset "E" ) 
)
+Name: Target Triton Again
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( and 
      ( key-pressed "E" ) 
      ( targeted "Triton" ) 
   )
   ( do-nothing ) 
)
+Name: Target The Triton 2
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Target The Triton", 2196)
+Objective key:  XSTR("Press $e$", 2197)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Well done" ) 
)
+Name: Well done
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Weapons" ) 
)
+Name: Weapons
+Repeat Count: 1
+Interval: 1
+Chained: 4

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Loadout" ) 
   ( flash-hud-gauge "WEAPONS_GAUGE" ) 
)
+Name: Loadout
+Repeat Count: 1
+Interval: 1
+Chained: 10

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Primary" ) 
   ( key-reset "." ) 
)
+Name: Primary
+Repeat Count: 1
+Interval: 1
+Chained: 9

$Formula: ( when 
   ( key-pressed "." ) 
   ( do-nothing ) 
)
+Name: Toggle Primaries
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Toggle Primaries", 2198)
+Objective key:  XSTR("Press $.$", 2199)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Tempest" ) 
)
+Name: Tempest
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Arm Tempest" ) 
)
+Name: Arm Tempest
+Repeat Count: 1
+Interval: 1
+Chained: 13

$Formula: ( when 
	( is-secondary-selected
		"Alpha 1"
		2
	)
	( do-nothing ) 
)
+Name: Select Tempest
+Interval: 1
+Chained: 1
+Objective:  XSTR("Arm Tempest", -1)
+Objective key:  XSTR("Press $/$", -1)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Dumb Fire" ) 
)
+Name: Dumb Fire
+Repeat Count: 1
+Interval: 1
+Chained: 8

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Select Drone 01" ) 
)
+Name: Select Drone 01
+Repeat Count: 1
+Interval: 1
+Chained: 18

$Formula: ( when 
   ( targeted "Drone 01" ) 
   ( do-nothing ) 
)
+Name: Select Drone 01 2
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target Drone 01", 2144)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Destroy Drone 01" ) 
)
+Name: Destroy Drone 01
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( is-destroyed-delay 0 "Drone 01" ) 
   ( do-nothing ) 
)
+Name: Destroy Drone 01 2
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Destroy Drone 01", 2146)
+Objective key:  XSTR("[Press $spacebar$]", 2200)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Tempest Pulverize" ) 
)
+Name: Tempest Pulverize
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Maximize" ) 
)
+Name: Maximize
+Repeat Count: 1
+Interval: 1
+Chained: 13

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Rockeye" ) 
)
+Name: Rockeye
+Repeat Count: 1
+Interval: 1
+Chained: 12

$Formula: ( when 
	( is-secondary-selected
		"Alpha 1"
		0
	)
	( do-nothing ) 
)
+Name: Select Rockeye
+Interval: 1
+Chained: 1
+Objective:  XSTR("Arm Rockeye", -1)
+Objective key:  XSTR("Press $/$", -1)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg 
      "Target Drone 02 Again 2" 
   )
)
+Name: Target Drone 02 Again 2
+Repeat Count: 1
+Interval: 1
+Chained: 7

$Formula: ( when 
   ( targeted "Drone 02" ) 
   ( do-nothing ) 
)
+Name: Target Drone 02 Again 2a
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Target Drone 02", 2195)
+Objective key:  XSTR("Press $h$", 2194)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Homing Radius" ) 
)
+Name: Homing Radius
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Destroy Drone 02" ) 
)
+Name: Destroy Drone 02
+Repeat Count: 1
+Interval: 1
+Chained: 13

$Formula: ( when 
   ( is-destroyed-delay 0 "Drone 02" ) 
   ( do-nothing ) 
)
+Name: Destroy Drone 02 2
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Destroy Drone 02", 2201)
+Objective key:  XSTR("Press $spacebar$", 2202)

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Nice Shooting" ) 
)
+Name: Nice Shooting
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( not 
      ( is-event-true-delay 
         "Training Canceled" 
         0 
      )
   )
   ( training-msg "Double Fire" ) 
)
+Name: Double Fire
+Repeat Count: 1
+Interval: 1
+Chained: 12

$Formula: ( when 
   ( key-pressed "Shift-/" ) 
   ( do-nothing ) 
)
+Name: Double Fire 2
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Toggle Double Fire Mode", 2203)
+Objective key:  XSTR("Press $Shift-/$", 2204)

$Formula: ( when 
   ( true ) 
   ( training-msg "More Drones" ) 
)
+Name: More Drones
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( is-destroyed-delay 
      0 
      "Drone 03" 
      "Drone 04" 
   )
   ( do-nothing ) 
)
+Name: Destroy Drones
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Destroy Drones", 2147)

$Formula: ( when 
   ( is-destroyed-delay 
      2 
      "Drone 03" 
      "Drone 04" 
   )
   ( training-msg "Low On Missiles" ) 
)
+Name: Low On Missiles
+Repeat Count: 1
+Interval: 1
+Chained: 0

$Formula: ( when 
   ( true ) 
   ( training-msg "Communications" ) 
   ( key-reset "C" ) 
   ( key-reset "Shift-R" ) 
)
+Name: Communications
+Repeat Count: 1
+Interval: 1
+Chained: 8

$Formula: ( when 
   ( or 
      ( key-pressed "C" ) 
      ( key-pressed "Shift-R" ) 
   )
   ( do-nothing ) 
)
+Name: Use Communications
+Repeat Count: 1
+Interval: 1
+Chained: 1
+Objective:  XSTR("Use Communications", 2205)
+Objective key:  XSTR("Press $c$", 2206)

$Formula: ( when 
   ( true ) 
   ( training-msg "Support Ship" ) 
)
+Name: Support Ship
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( true ) 
   ( training-msg "ETA Support" ) 
)
+Name: ETA Support
+Repeat Count: 1
+Interval: 1
+Chained: 9

$Formula: ( when 
   ( true ) 
   ( flash-hud-gauge "SUPPORT GUAGE" ) 
)
+Name: Support Gauge
+Repeat Count: 1
+Interval: 1
+Chained: 1

$Formula: ( when 
   ( true ) 
   ( training-msg "Support Purpose" ) 
)
+Name: Support Purpose
+Repeat Count: 1
+Interval: 1
+Chained: 8

$Formula: ( when 
   ( true ) 
   ( training-msg "Second Purpose" ) 
)
+Name: Second Purpose
+Repeat Count: 1
+Interval: 1
+Chained: 8

$Formula: ( when 
   ( true ) 
   ( training-msg "Reload" ) 
)
+Name: Reload
+Repeat Count: 1
+Interval: 1
+Chained: 12

$Formula: ( when 
   ( true ) 
   ( training-msg "Covered A Lot" ) 
)
+Name: Covered A Lot
+Repeat Count: 1
+Interval: 1
+Chained: 9

$Formula: ( when 
   ( has-departed-delay 0 "Alpha 1" ) 
   ( do-nothing ) 
)
+Name: Return To Base
+Repeat Count: 1
+Interval: 1
+Chained: 2
+Objective:  XSTR("Return To Base", 24)
+Objective key:  XSTR("Press $alt-j$", 520)

$Formula: ( when 
   ( or 
      ( and 
         ( is-destroyed-delay 0 "Drone 01" ) 
         ( not 
            ( is-event-true-delay 
               "Destroy Drone 01" 
               0 
            )
         )
      )
      ( and 
         ( is-destroyed-delay 0 "Drone 02" ) 
         ( not 
            ( is-event-true-delay 
               "Destroy Drone 02" 
               0 
            )
         )
      )
      ( is-destroyed-delay 0 "Triton" ) 
   )
   ( training-msg "Traning Canceled" ) 
)
+Name: Training Canceled
+Repeat Count: 1
+Interval: 1

$Formula: ( when 
   ( has-departed-delay 0 "Alpha 1" ) 
   ( do-nothing ) 
)
+Name: Return To Base 2
+Repeat Count: 1
+Interval: 1
+Chained: 0
+Objective:  XSTR("Return To Base", 24)
+Objective key:  XSTR("Press $alt-j$", 520)

#Goals		;! 1 total

$Type: Primary
+Name: Complete Training 2
$MessageNew:  XSTR("Complete Training", 2149)
$end_multi_text
$Formula: ( is-event-true-delay 
   "Covered A Lot" 
   0 
)

#Waypoints		;! 0 lists total


#Messages		;! 44 total

$Name: Welcome
$Team: -1
$MessageNew:  XSTR("Welcome to module TSM-103b, pilot. Don't touch the controls until you are told to do so. You will fail this session if you do not follow instructions carefully.", 2207)
$end_multi_text
+Wave Name: TR-02_IN_01.wav

$Name: Target Me
$Team: -1
$MessageNew:  XSTR("[Press $t$] Begin by targeting my fighter.", 2208)
$end_multi_text
+Wave Name: TR-02_IN_02.wav

$Name: Combat
$Team: -1
$MessageNew:  XSTR("In combat, you will need to acquire your targets quickly. With multiple wings and warships, you will not have time to cycle through all objects in sensor range to find a specific target. Let's take a look at some controls that will help you locate targets more efficiently.", 2209)
$end_multi_text
+Wave Name: TR-02_IN_03.wav

$Name: Two Drones
$Team: -1
$MessageNew:  XSTR("Two drones will be used for the first part of this exercise.", 2210)
$end_multi_text
+Wave Name: TR-02_IN_04.wav

$Name: Nearest Hostile
$Team: -1
$MessageNew:  XSTR("You have a targeting control which enables you to acquire the nearest hostile target [$h$]. Using the control repeatedly will cycle through hostile targets in order of their proximity.", 2211)
$end_multi_text
+Wave Name: TR-02_IN_05.wav

$Name: Target Drone 01
$Team: -1
$MessageNew:  XSTR("Target Drone 01 with your hostile targeting control. [Press $h$]", 2212)
$end_multi_text
+Wave Name: TR-02_IN_06.wav

$Name: Target Drone 02
$Team: -1
$MessageNew:  XSTR("Good. Now Target Drone 02. [Press $h$]", 2213)
$end_multi_text
+Wave Name: TR-02_IN_07.wav

$Name: Excellent
$Team: -1
$MessageNew:  XSTR("Excellent.", 2214)
$end_multi_text
+Wave Name: TR-02_IN_08.wav

$Name: Targeting Control
$Team: -1
$MessageNew:  XSTR("Now we'll learn another useful targeting control. As a GTVA fighter pilot, you will be called upon to defend larger vessels, from troop transports to destroyer-class warships. For this simulation, let's bring in a Triton-class freighter.", 2215)
$end_multi_text
+Wave Name: TR-02_IN_09.wav

$Name: Observe
$Team: -1
$MessageNew:  XSTR("Observe that the name and hull integrity of the freighter appears in a box to the right of your reticle. This escort list enables you to monitor its status.", 2216)
$end_multi_text
+Wave Name: TR-02_IN_10.wav

$Name: Escort Target
$Team: -1
$MessageNew:  XSTR("You can target ships on your escort list by using the escort targeting control. Target the freighter now. [Press $e$]", 2217)
$end_multi_text
+Wave Name: TR-02_IN_11.wav

$Name: Escort Mission
$Team: -1
$MessageNew:  XSTR("Well done. On any escort mission, it is important that you stay close to vessels you have been assigned to protect. The escort targeting control makes locating these ships more efficient.", 2218)
$end_multi_text
+Wave Name: TR-02_IN_12.wav

$Name: Escort List
$Team: -1
$MessageNew:  XSTR("Be advised the escort list will not be limited to ships you have been ordered to protect. Any major target, friendly or hostile, could appear on that list. This will help you monitor the status of ships with tactical or strategic importance.", 2219)
$end_multi_text
+Wave Name: TR-02_IN_13.wav

$Name: Review
$Team: -1
$MessageNew:  XSTR("Let's review what we've covered so far.", 2220)
$end_multi_text
+Wave Name: TR-02_IN_14.wav

$Name: Target 01 Again
$Team: -1
$MessageNew:  XSTR("Target Drone 01 with your hostile targeting control. [Press $h$]", 2212)
$end_multi_text
+Wave Name: TR-02_IN_15.wav

$Name: Target 02 Again
$Team: -1
$MessageNew:  XSTR("Now Target Drone 02. [Press $h$]", 2221)
$end_multi_text
+Wave Name: TR-02_IN_16.wav

$Name: Target Triton Again
$Team: -1
$MessageNew:  XSTR("Now target the freighter with your escort targeting control. [Press $e$]", 2222)
$end_multi_text
+Wave Name: TR-02_IN_17.wav

$Name: Well done
$Team: -1
$MessageNew:  XSTR("Well done.", 2223)
$end_multi_text
+Wave Name: TR-02_IN_18.wav

$Name: Weapons
$Team: -1
$MessageNew:  XSTR("In module TSM-103c, you practiced firing your HL-7. We'll now take a closer look at your primary and secondary weapons.", 2224)
$end_multi_text
+Wave Name: TR-02_IN_19.wav

$Name: Loadout
$Team: -1
$MessageNew:  XSTR("Your weapons loadout is displayed to the right of your reticle. Primary cannons are listed above your secondary missile banks.", 2225)
$end_multi_text
+Wave Name: TR-02_IN_20.wav

$Name: Primary
$Team: -1
$MessageNew:  XSTR("Use your primary weapon selector [Press $.$] to toggle either one or both cannons to fire. Firing both primaries will inflict more damage but will also drain more energy from your fighter's reserves.", 2226)
$end_multi_text
+Wave Name: TR-02_IN_21.wav

$Name: Tempest
$Team: -1
$MessageNew:  XSTR("The Myrmidon space superiority fighter has three missile banks. As a new pilot, you will be authorized to use the Tempest dumbfire and the Rockeye heat-seeker. Let's practice firing the Tempest.", 2227)
$end_multi_text
+Wave Name: TR-02_IN_22.wav

$Name: Arm Tempest
$Team: -1
$MessageNew:  XSTR("Use your secondary weapon selector [Press $/$] to arm your bank of Tempest missiles.", 2228)
$end_multi_text
+Wave Name: TR-02_IN_23.wav

$Name: Dumb Fire
$Team: -1
$MessageNew:  XSTR("Good. Tempests are dumb-fire projectiles. These warheads have no homing system, so they'll fly in the direction in which they are fired. For this reason, they are most effective at close range. Unless your aim is very precise, hitting targets at a distance with the Tempest may be difficult.", 2229)
$end_multi_text
+Wave Name: TR-02_IN_24.wav

$Name: Select Drone 01
$Team: -1
$MessageNew:  XSTR("Now select Drone 01 using your hostile targeting control. [Press $h$]", 2230)
$end_multi_text
+Wave Name: TR-02_IN_25.wav

$Name: Destroy Drone 01
$Team: -1
$MessageNew:  XSTR("Good. Destroy Drone 01 with your Tempest missiles. [Press $spacebar$] Close your distance if you need to.", 2231)
$end_multi_text
+Wave Name: TR-02_IN_26.wav

$Name: Tempest Pulverize
$Team: -1
$MessageNew:  XSTR("Well done. The Tempest may not be as accurate as a heat- or aspect-seeking missile, but a Myrmidon can carry up to 320 of these missiles. A volley of Tempests will quickly pulverize an enemy fighter.", 2232)
$end_multi_text
+Wave Name: TR-02_IN_27.wav

$Name: Maximize
$Team: -1
$MessageNew:  XSTR("To maximize their effectiveness, use them in conjunction with your Subach HL-7. While the lasers penetrate the shields of your target, the missiles will impact the enemy's hull.", 2233)
$end_multi_text
+Wave Name: TR-02_IN_28.wav

$Name: Rockeye
$Team: -1
$MessageNew:  XSTR("Let's move on to the Rockeye heat-seeker. Arm the Rockeye with your secondary weapon selector. [Press $/$]", 2234)
$end_multi_text
+Wave Name: TR-02_IN_29.wav

$Name: Target Drone 02 Again 2
$Team: -1
$MessageNew:  XSTR("Well done. Now target Drone 02. [Press $h$]", 2235)
$end_multi_text
+Wave Name: TR-02_IN_30.wav

$Name: Homing Radius
$Team: -1
$MessageNew:  XSTR("When you fire the Rockeye, the missile's tracking system will lock onto the heat signature of your target. Be aware the homing radius of the Rockeye is limited, and your target must be near the center of your HUD.", 2236)
$end_multi_text
+Wave Name: TR-02_IN_31.wav

$Name: Destroy Drone 02
$Team: -1
$MessageNew:  XSTR("Destroy Drone 02 using your Rockeye missiles. [Press $spacebar$]", 2237)
$end_multi_text
+Wave Name: TR-02_IN_32.wav

$Name: Nice Shooting
$Team: -1
$MessageNew:  XSTR("Nice shooting, pilot. Compared to the Tempest, the Rockeye is more accurate and has a greater effective range. However, the Myrmidon can carry no more than 20 Rockeyes.", 2238)
$end_multi_text
+Wave Name: TR-02_IN_33.wav

$Name: Double Fire
$Team: -1
$MessageNew:  XSTR("You can also toggle double-fire mode to launch twice the ordnance. [Press $Shift-/$] You will inflict more damage and increase your chances of hitting the target, but your missiles will be depleted more rapidly in double-fire mode.", 2239)
$end_multi_text
+Wave Name: TR-02_IN_34.wav

$Name: More Drones
$Team: -1
$MessageNew:  XSTR("We will now send in more drones so you can practice firing missiles. Be sure to toggle between banks so you can get a feel for both the Tempest and the Rockeye.", 2240)
$end_multi_text
+Wave Name: TR-02_IN_35.wav

$Name: Low On Missiles
$Team: -1
$MessageNew:  XSTR("When you run low on missiles, you need to rearm your fighter. To do this you must call in a support ship.", 2241)
$end_multi_text
+Wave Name: TR-02_IN_36.wav

$Name: Communications
$Team: -1
$MessageNew:  XSTR("First, press the communications [$c$] key to bring up your messaging window, followed by the [5] key to Rearm.", 2242)
$end_multi_text
+Wave Name: TR-02_IN_37.wav

$Name: Support Ship
$Team: -1
$MessageNew:  XSTR("In order for the support ship to dock, you must bring your fighter to a complete stop.  The support ship will then automatically dock with you.", 2243)
$end_multi_text
+Wave Name: TR-02_IN_38.wav

$Name: ETA Support
$Team: -1
$MessageNew:  XSTR("In the lower portion of your HUD, an indicator displays the support ship's ETA.", 2244)
$end_multi_text
+Wave Name: TR-02_IN_39.wav

$Name: Support Purpose
$Team: -1
$MessageNew:  XSTR("The support ship's primary purpose is twofold.  First, it will reload your secondary weapons and countermeasures.", 2245)
$end_multi_text
+Wave Name: TR-02_IN_40.wav

$Name: Second Purpose
$Team: -1
$MessageNew:  XSTR("Second, the support ship is capable of making minor repairs to your ship.  It can fully repair any damaged or destroyed subsystem.  However, the support ship cannot repair your hull.", 2246)
$end_multi_text
+Wave Name: TR-02_IN_41.wav

$Name: Reload
$Team: -1
$MessageNew:  XSTR("Keep in mind a support ship can only load as many weapons as it has on board.  It may not be enough to completely rearm your fighter.", 2247)
$end_multi_text
+Wave Name: TR-02_IN_42.wav

$Name: Covered A Lot
$Team: -1
$MessageNew:  XSTR("We covered a lot in this module. If you need to review this material, replay the simulation. Otherwise, you are qualified to proceed to TSM-103a. Engage your subspace drive.", 2248)
$end_multi_text
+Wave Name: TR-02_IN_43.wav

$Name: Traning Canceled
$Team: -1
$MessageNew:  XSTR("Because you failed to follow instructions, TSM-103b has been terminated. Engage your subspace drive.", 2249)
$end_multi_text
+Wave Name: TR-02_IN_44.wav

#Reinforcements		;! 0 total


#Background bitmaps		;! 18 total

$Num stars: 2000
$Ambient light level: 0

$Bitmap List:
$Sun: SunVega
+Angles: 1.151916 0.000000 0.000000
+Scale: 2.000000
$Starbitmap: NebulC5-Whisp
+Angles: 0.000000 0.000000 0.575958
+ScaleX: 3.000000
+ScaleY: 3.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC12-Whisp
+Angles: 0.383972 0.000000 0.575958
+ScaleX: 5.000000
+ScaleY: 5.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC1-Main
+Angles: 0.000000 0.000000 0.558505
+ScaleX: 1.000000
+ScaleY: 1.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH8-Whisp
+Angles: 0.052360 0.000000 0.558505
+ScaleX: 1.000000
+ScaleY: 1.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH5-Whisp
+Angles: 6.213367 0.000000 0.593412
+ScaleX: 1.000000
+ScaleY: 1.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH3-Main
+Angles: 6.248274 0.000000 0.506145
+ScaleX: 1.000000
+ScaleY: 1.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH7-Whisp
+Angles: 6.213367 0.296706 0.488692
+ScaleX: 2.000000
+ScaleY: 2.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH14-Whisp
+Angles: 0.000000 0.000000 0.244346
+ScaleX: 3.000000
+ScaleY: 3.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC12-Whisp
+Angles: 6.003928 1.535889 0.261799
+ScaleX: 3.000000
+ScaleY: 3.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC14-Whisp
+Angles: 6.038835 0.000000 0.296706
+ScaleX: 1.000000
+ScaleY: 1.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH13-Whisp
+Angles: 6.038835 0.000000 0.296706
+ScaleX: 2.000000
+ScaleY: 2.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH1-Main
+Angles: 5.742129 3.874628 6.195914
+ScaleX: 5.000000
+ScaleY: 5.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC1-Main
+Angles: 5.689769 1.535889 6.230821
+ScaleX: 2.000000
+ScaleY: 2.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC11-Whisp
+Angles: 5.445423 0.000000 6.003928
+ScaleX: 3.000000
+ScaleY: 3.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC2-Main
+Angles: 5.550143 0.000000 6.108648
+ScaleX: 3.000000
+ScaleY: 3.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH2-Main
+Angles: 5.550143 3.141590 6.108648
+ScaleX: 2.000000
+ScaleY: 2.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulH3-Main
+Angles: 5.619956 0.575958 6.161007
+ScaleX: 2.000000
+ScaleY: 2.000000
+DivX: 1
+DivY: 1
$Starbitmap: NebulC5-Whisp
+Angles: 5.619956 0.000000 6.161007
+ScaleX: 5.000000
+ScaleY: 5.000000
+DivX: 1
+DivY: 1

#Asteroid Fields

#Music

$Event Music: None
$Briefing Music: Brief2

#End

